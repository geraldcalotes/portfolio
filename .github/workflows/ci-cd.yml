name: React CI/CD

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest

        steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Setup Node.js
          uses: actions/setup-node@v3
          with:
            node-version: '18'
            cache: 'npm'

        - name: Install Dependencies
          run: npm install

        - name: Build
          run: npm run build
 
        - name: Add SSH Private Key
          uses: webfactory/ssh-agent@v0.7.0
          with:
            ssh-private-key: ${{secrets.SSH_PRIVATE_KEY}}

        - name: Deploy to VPS
          run: |
            echo "Deploying to VPS...${{ secrets.DEPLOY_PATH }}"
            # Create necessary directories on the server
            ssh -p ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "mkdir -p ${{ secrets.DEPLOY_PATH }}/.next ${{ secrets.DEPLOY_PATH }}/public"
            
            # Copy the built files
            scp -P ${{ secrets.SSH_PORT }} \
              -o StrictHostKeyChecking=no \
              -r .next/* \
              ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.DEPLOY_PATH }}/.next/
            
            scp -P ${{ secrets.SSH_PORT }} \
              -o StrictHostKeyChecking=no \
              -r public/* \
              ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.DEPLOY_PATH }}/public/
            
            # Copy package.json and other necessary files
            scp -P ${{ secrets.SSH_PORT }} \
              -o StrictHostKeyChecking=no \
              package.json package-lock.json next.config.js \
              ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.DEPLOY_PATH }}/
            
            # Install dependencies and restart the application on the server
            ssh -p ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "cd ${{ secrets.DEPLOY_PATH }} && npm install --production && pm2 restart portfolio || pm2 start npm --name portfolio -- start"